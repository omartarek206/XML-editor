# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'gui.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QDialog, QApplication,QFileDialog,QLineEdit,QInputDialog,QMessageBox
from PyQt5.QtCore import QRegExp
from PyQt5.QtGui import QColor, QRegExpValidator, QSyntaxHighlighter, QTextCharFormat,QTextCursor

from minify import minify
from prettify import prettify
from Error_checking import error_checking
from JSON_Parser import *
from Compress_JSON import *


class Ui_MainWindow(object):

    def setupUi(self, MainWindow):
        self.current_filename = ""
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1060, 900)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")


        self.save = QtWidgets.QPushButton(self.centralwidget)
        self.save.setGeometry(QtCore.QRect(950, 850, 75, 23))
        self.save.setObjectName("save")
        self.save.clicked.connect(self.save_text)


        self.check_errors = QtWidgets.QPushButton(self.centralwidget)
        self.check_errors.setGeometry(QtCore.QRect(750, 850, 75, 23))
        self.check_errors.setObjectName("check_errors")
        self.check_errors.clicked.connect(self.show_errors)


        self.prettify = QtWidgets.QPushButton(self.centralwidget)
        self.prettify.setGeometry(QtCore.QRect(850, 850, 75, 23))
        self.prettify.setObjectName("prettify")
        self.prettify.clicked.connect(self.prettify_file)


        self.convert = QtWidgets.QPushButton(self.centralwidget)
        self.convert.setGeometry(QtCore.QRect(550, 850, 75, 23))
        self.convert.setObjectName("convert")
        self.convert.clicked.connect(self.convert_JSON)


        self.minify = QtWidgets.QPushButton(self.centralwidget)
        self.minify.setGeometry(QtCore.QRect(650, 850, 75, 23))
        self.minify.setObjectName("minify")
        self.minify.clicked.connect(self.minify_file)


        self.browse = QtWidgets.QPushButton(self.centralwidget)
        self.browse.setGeometry(QtCore.QRect(510, 10, 81, 21))
        self.browse.setObjectName("browse")
        self.browse.clicked.connect(self.browsefiles)

        self.findword = QtWidgets.QPushButton(self.centralwidget)
        self.findword.setGeometry(QtCore.QRect(810, 10, 81, 21))
        self.findword.setObjectName("Find")
        self.findword.clicked.connect(self.search_in_txt)

        self.comp = QtWidgets.QPushButton(self.centralwidget)
        self.comp.setGeometry(QtCore.QRect(910, 10, 60, 21))
        self.comp.setObjectName("Compress")
        self.comp.clicked.connect(self.compress_file)

        self.decomp = QtWidgets.QPushButton(self.centralwidget)
        self.decomp.setGeometry(QtCore.QRect(980, 10, 60, 21))
        self.decomp.setObjectName("Decompress")
        self.decomp.clicked.connect(self.decompress_file)


        self.filename = QtWidgets.QLineEdit(self.centralwidget)
        self.filename.setGeometry(QtCore.QRect(60, 10, 431, 20))
        self.filename.setObjectName("filename")

        #find line text
        self.find = QtWidgets.QLineEdit(self.centralwidget)
        self.find.setGeometry(QtCore.QRect(600, 10, 200, 20))
        self.find.setObjectName("find")


        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(60, 50, 950, 750))
        self.textEdit.setObjectName("textEdit")


        self.errortext = QtWidgets.QTextEdit(self.centralwidget)
        self.errortext.setGeometry(QtCore.QRect(60, 810, 450, 70))
        self.errortext.setObjectName("textEdit")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "XML editor"))
        self.save.setText(_translate("MainWindow", "Save"))
        self.check_errors.setText(_translate("MainWindow", "Check Errors"))
        self.prettify.setText(_translate("MainWindow", "Prettify"))
        self.convert.setText(_translate("MainWindow", "Convert"))
        self.minify.setText(_translate("MainWindow", "Minify"))
        self.browse.setText(_translate("MainWindow", "Open File"))
        self.findword.setText(_translate("MainWindow", "Find"))
        self.comp.setText(_translate("MainWindow", "Compress"))
        self.decomp.setText(_translate("MainWindow", "Decomp."))



    def browsefiles(self):
        filename = QFileDialog.getOpenFileName()
        self.filename.setText(filename[0])
        self.current_filename = filename
        with open(filename[0], 'r') as f:
            file_text = f.read()
            self.textEdit.setText(file_text)



    def minify_file(self):
        filename = self.current_filename
        self.textEdit.setText(minify(filename[0]))

    def prettify_file(self):
        filename = self.current_filename

        self.textEdit.setText(prettify(filename[0]))


    #show errors fn

    def show_errors(self):
        filename = self.current_filename
        error=""

        error=error_checking(filename[0])
        self.errortext.setText(error)



    #saving the text fn
    def save_text(self):
        filename = QFileDialog.getSaveFileName()
        with open(filename[0], 'w') as f:
            my_text = self.textEdit.toPlainText()
            f.write(my_text)
    #search fn
    def search_in_txt(self):
        txt_to_search = self.find.text()
        try:
            result = self.textEdit.find(txt_to_search)

            if result == False:
                # move cursor to the beginning and restart search
                self.textEdit.moveCursor(QtGui.QTextCursor.Start)
                self.textEdit.find(txt_to_search)
        except:
            self.statusbar.showMessage("This is the last iteration founded")
        return
    def compress_file(self):
        compressed=""
        filename = self.current_filename
        compressed=compress(filename[0])
        self.textEdit.setText(compressed)
        print(compressed)
    def decompress_file(self):
        filename = QFileDialog.getOpenFileName()
        decompressed = ""
        decompressed =decompress(filename[0])
        self.textEdit.setText(decompressed)

    def convert_JSON(self):

        path_read = self.current_filename
        mypath = path_read[0]
        print(mypath)
        mydict = xml_to_dict(mypath)
        print(mydict)
        filename = QFileDialog.getSaveFileName()
        dict_to_json(filename[0], mydict)
        text = open(filename[0], 'r')
        json = text.read()
        # json = prettify_json(text)
        self.textEdit.setText(json)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
