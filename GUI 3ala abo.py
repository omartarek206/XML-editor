# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'gui.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QDialog, QApplication,QFileDialog,QLineEdit,QInputDialog
from PyQt5.QtCore import QRegExp
from PyQt5.QtGui import QColor, QRegExpValidator, QSyntaxHighlighter, QTextCharFormat

from minify import minify



class SyntaxHighlighter(QSyntaxHighlighter):
    def __init__(self, parent):
        super(SyntaxHighlighter, self).__init__(parent)
        self._highlight_lines = dict()

    def highlight_line(self, line, fmt):
        if isinstance(line, int) and line >= 0 and isinstance(fmt, QTextCharFormat):
            self._highlight_lines[1] = fmt
            tb = self.document().findBlockByLineNumber(1)
            self.rehighlightBlock(tb)

    def clear_highlight(self):
        self._highlight_lines = dict()
        self.rehighlight()

    def highlightBlock(self, text):
        line = self.currentBlock().blockNumber()
        fmt = self._highlight_lines.get(line)
        if fmt is not None:
            self.setFormat(0, len(text), fmt)


class Ui_MainWindow(object):

    def setupUi(self, MainWindow):
        self.current_filename = ""
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1060, 900)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.save = QtWidgets.QPushButton(self.centralwidget)
        self.save.setGeometry(QtCore.QRect(950, 850, 75, 23))
        self.save.setObjectName("save")
        self.save.clicked.connect(self.save_text)
        self.check_errors = QtWidgets.QPushButton(self.centralwidget)
        self.check_errors.setGeometry(QtCore.QRect(750, 850, 75, 23))
        self.check_errors.setObjectName("check_errors")
        self.check_errors.clicked.connect(self.onTextChanged)
        self.prettify = QtWidgets.QPushButton(self.centralwidget)
        self.prettify.setGeometry(QtCore.QRect(850, 850, 75, 23))
        self.prettify.setObjectName("prettify")
        self.convert = QtWidgets.QPushButton(self.centralwidget)
        self.convert.setGeometry(QtCore.QRect(550, 850, 75, 23))
        self.convert.setObjectName("convert")
        self.minify = QtWidgets.QPushButton(self.centralwidget)
        self.minify.setGeometry(QtCore.QRect(650, 850, 75, 23))
        self.minify.setObjectName("minify")
        self.minify.clicked.connect(self.minify_file)
        self.browse = QtWidgets.QPushButton(self.centralwidget)
        self.browse.setGeometry(QtCore.QRect(510, 10, 81, 21))
        self.browse.setObjectName("browse")
        self.browse.clicked.connect(self.browsefiles)


        self.filename = QtWidgets.QLineEdit(self.centralwidget)
        self.filename.setGeometry(QtCore.QRect(60, 10, 431, 20))
        self.filename.setObjectName("filename")

        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(60, 50, 950, 750))
        self.textEdit.setObjectName("textEdit")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.save.setText(_translate("MainWindow", "Save"))
        self.check_errors.setText(_translate("MainWindow", "Check Errors"))
        self.prettify.setText(_translate("MainWindow", "Prettify"))
        self.convert.setText(_translate("MainWindow", "Convert"))
        self.minify.setText(_translate("MainWindow", "Minify"))
        self.browse.setText(_translate("MainWindow", "Open File"))


    def browsefiles(self):
        filename = QFileDialog.getOpenFileName()
        self.filename.setText(filename[0])
        self.current_filename = filename
        with open(filename[0], 'r') as f:
            file_text = f.read()
            self.textEdit.setText(file_text)





    def minify_file(self):
        filename = self.current_filename
        self.textEdit.setText(minify(filename[0]))






    def save_text(self):
        filename = QFileDialog.getSaveFileName()
        with open(filename[0], 'w') as f:
            my_text = self.textEdit.toPlainText()
            f.write(my_text)

    def onTextChanged(self, text):
        fmt = QTextCharFormat()
        fmt.setBackground(QColor("yellow"))
        self._highlighter.clear_highlight()
        for e in text.split():
            line = int(e)
            self._highlighter.highlight_line(line, fmt)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
